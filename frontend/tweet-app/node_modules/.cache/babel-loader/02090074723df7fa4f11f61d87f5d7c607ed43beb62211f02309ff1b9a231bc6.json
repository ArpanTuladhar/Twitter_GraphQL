{"ast":null,"code":"var _jsxFileName = \"/Users/arpan.tuladhar/Desktop/final/x-clone/frontend/tweet-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, useQuery, gql } from '@apollo/client';\nimport './App.css';\n\n// Simple query to get tweets\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TWEETS = gql`\n  query GetTweets {\n    tweets {\n      id\n      content\n    }\n  }\n`;\n\n// Mutation to create a tweet\nconst CREATE_TWEET = gql`\n  mutation CreateTweet($content: String!) {\n    createTweet(content: $content) {\n      id\n      content\n    }\n  }\n`;\nfunction App() {\n  _s();\n  const [tweetContent, setTweetContent] = useState('');\n  const [message, setMessage] = useState('');\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TWEETS);\n  const [createTweet] = useMutation(CREATE_TWEET, {\n    update: (cache, {\n      data: {\n        createTweet\n      }\n    }) => {\n      const {\n        tweets\n      } = cache.readQuery({\n        query: GET_TWEETS\n      });\n      cache.writeQuery({\n        query: GET_TWEETS,\n        data: {\n          tweets: [...tweets, createTweet]\n        }\n      });\n    },\n    onError: error => {\n      setMessage('An error occurred while creating the tweet.');\n    }\n  });\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const {\n        data: {\n          createTweet: newTweet\n        }\n      } = await createTweet({\n        variables: {\n          content: tweetContent\n        }\n      });\n      setMessage(`Tweet created: ${newTweet.content}`);\n      setTweetContent('');\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage(`An error occurred while creating the tweet: ${error.message}`);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tweetContent\",\n        children: \"Tweet Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"tweetContent\",\n        name: \"tweetContent\",\n        rows: \"4\",\n        cols: \"50\",\n        required: true,\n        value: tweetContent,\n        onChange: e => setTweetContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: message.includes('error') ? 'error-message' : 'success-message',\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tweets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tweet.content\n      }, tweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yAvgCpMpS0ZcHdtY5d+MR2c2188=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = App;\nexport { App };\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useMutation","useQuery","gql","jsxDEV","_jsxDEV","GET_TWEETS","CREATE_TWEET","App","_s","tweetContent","setTweetContent","message","setMessage","loading","error","data","createTweet","update","cache","tweets","readQuery","query","writeQuery","onError","handleSubmit","event","preventDefault","newTweet","variables","content","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","id","name","rows","cols","required","value","onChange","e","target","type","includes","map","tweet","_c","$RefreshReg$"],"sources":["/Users/arpan.tuladhar/Desktop/final/x-clone/frontend/tweet-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation, useQuery, gql } from '@apollo/client';\nimport './App.css';\n\n// Simple query to get tweets\nconst GET_TWEETS = gql`\n  query GetTweets {\n    tweets {\n      id\n      content\n    }\n  }\n`;\n\n// Mutation to create a tweet\nconst CREATE_TWEET = gql`\n  mutation CreateTweet($content: String!) {\n    createTweet(content: $content) {\n      id\n      content\n    }\n  }\n`;\n\nfunction App() {\n  const [tweetContent, setTweetContent] = useState('');\n  const [message, setMessage] = useState('');\n\n  const { loading, error, data } = useQuery(GET_TWEETS);\n\n  const [createTweet] = useMutation(CREATE_TWEET, {\n    update: (cache, { data: { createTweet } }) => {\n      const { tweets } = cache.readQuery({ query: GET_TWEETS });\n      cache.writeQuery({\n        query: GET_TWEETS,\n        data: { tweets: [...tweets, createTweet] },\n      });\n    },\n    onError: (error) => {\n      setMessage('An error occurred while creating the tweet.');\n    },\n  });\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data: { createTweet: newTweet } } = await createTweet({\n        variables: { content: tweetContent },\n      });\n      setMessage(`Tweet created: ${newTweet.content}`);\n      setTweetContent('');\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage(`An error occurred while creating the tweet: ${error.message}`);\n    }\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div className=\"App\">\n      <h1>Create a Tweet</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"tweetContent\">Tweet Content:</label>\n        <br />\n        <textarea\n          id=\"tweetContent\"\n          name=\"tweetContent\"\n          rows=\"4\"\n          cols=\"50\"\n          required\n          value={tweetContent}\n          onChange={(e) => setTweetContent(e.target.value)}\n        ></textarea>\n        <br />\n        <br />\n        <input type=\"submit\" value=\"Create Tweet\" />\n      </form>\n\n      {message && (\n        <div className={message.includes('error') ? 'error-message' : 'success-message'}>\n          {message}\n        </div>\n      )}\n\n      <h2>Tweets</h2>\n      <ul>\n        {data.tweets.map((tweet) => (\n          <li key={tweet.id}>{tweet.content}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport { App };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}